AIM:- A C program that use both recursive and non recursive function to perform linear search for a key value in list.

ALGORITHM:-
Step1:- start 
step2:-declare n,i,val,pos,option
step3:-take input 'n'
step 4:-declare arr[n]
step 5:-intialize i=0.
step 6:-if i<n then ,go to step 7 else goto to step 9
step 7:-read arr[i]
step 8:-i<- i+1
step 9:-take input 'val'
step 10:- display"enter 1 for non recursive function"
step 11:-display"enter 2 for recursive function"
step 12:- read option
step 13:-if option=1then goto step 14 
            else
                 if option=2
               then goto step 19
            else
                 display "enter correct option"
      then goto step 23.
        [ end of if]
step14:-setfound<-0,pos<- -1
step15:- intialize i=0
step16:- repeat step 17 while i<=n
step 17:-if arr[i]=val        
              set pos=i
             print pos 
    goto step 23
[end of if]
     set i=i+1
 step18:-if pos=-1
     print" value is not present in the array"
  [end of if]
goto step23
step19:- set pos=0
step 20:-if n>0
    goto  step21
   else
goto step 23 
[end of if]
step 21:-if arr[n-1]=val 
        assign pos<- n
 else 
set i=i+1
goto step20
[end of if]
step 22:- if pos!=0
print the position of element goto step 23.
step 23:-stop.
Program:
#include<stdio.h>
void linear_search(int val,int n,int arr[*]);		//non-recursive function
int linear_search_re(int val,int n,int arr[*]);		//recursive function
void main()
{
	int n,i,val,pos,option;
	printf("enter the size of array: ");
	scanf("%d",&n);
	int arr[n];
	printf("enter the elements: ");
	for(i=0;i<n;i++)
		scanf("%d",&arr[i]);
	printf("enter the value to search: ");
	scanf("%d",&val);
	printf("enter 1 for Non-Recursive Function \n");
	printf("enter 2 for Recursive Function\n ");
	scanf("%d",&option);
	switch(option)
	{
	    case 1:
	    {
	       	linear_search(val,n,arr);
	       	break;
	    }
	    case 2:
	    {
	        pos=linear_search_re(val,n,arr);
	        if(pos!=0)
		        printf("\nelement %d is found at position %d using Recursive function",val,pos);
	        else 
	        	printf("\nelement %d does not found using Recursive function",val);
	        break;	
	    }
	    default:
	        printf("enter correct option! ");
	}
}
void linear_search(int val,int n,int arr[n])	//Non-recursive function
{
	int i,found=0,pos=-1;
	for(i=0;i<n;i++)
	{
		if(arr[i]==val)
		{
			found=1;
			pos=i;
			printf("\nelement %d is found at position %d using Non-Recursive function",val,i+1);
			break;
		}
	}
	if(found==0)
		printf("\nelement %d does not found using Non-Recursive function",val);
}
int linear_search_re(int val,int n,int arr[n])	  //Recursive function
{
	if(n>0)
	{
		if(arr[n-1]==val)
			return n;
		else
			return linear_search_re(val,n-1,arr);	
	}
	return 0;
}
Output:
1.enter the size of array :6
enter the elements :10 15 25 30 60 75
enter the value to search:15
enter 1 for non recursive function
enter 2 for recursive function
1
 element 15 is found at position 2 using non-recursion
2.enter the size of array :4
enter the elements:10 20 30 40 50
enter the value to search:40
enter 1 for non recursive function
enter 2 for recursive function
2
 element 20 is found at position 4  using  recursion
3.enter the size of array :5
enter the elements:20 30 40 50 60
enter the value to search:15
enter 1 for non recursive function
enter 2 for recursive function
1
 element 15 does not found using  non-recursion
4.enter the size of array :5
enter the elements:10 20 35 45 65
enter the value to search:10
enter 1 for non recursive function
enter 2 for recursive function
2
 element 25 does  not found using recursion
        

